  services:

    server:
      build:
        context: .
        dockerfile: ./app/app.Dockerfile
      restart: always
      networks:
        - app-network
      volumes:
        - ./:/app
      env_file: .env
      environment:
        - PYTHONUNBUFFERED=1
      ports:
        - 8000:8000
      # depends_on:
      #   db: 
      #     condition: service_healthy

    db:
      image: postgres:15
      restart: always
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      ports:
        - "${POSTGRES_OUTER_PORT}:${POSTGRES_INNER_PORT}"
      networks:
        - app-network
      volumes:
        - ./db/init:/docker-entrypoint-initdb.d:ro
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
        interval: 10s
        timeout: 5s
        retries: 5

    nginx:
      image: nginx:alpine
      restart: always
      ports:
        - 80:80
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - server
      networks:
        - app-network

  networks:
    app-network:
      driver: bridge
      